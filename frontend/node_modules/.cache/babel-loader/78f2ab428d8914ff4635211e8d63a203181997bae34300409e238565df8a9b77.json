{"ast":null,"code":"var _jsxFileName = \"/Users/jr7085/Code/amazonq-rules/frontend/src/components/CategoryFilter.js\";\nimport React from 'react';\nimport './CategoryFilter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryFilter = ({\n  selectedCategory,\n  onCategoryChange,\n  rules\n}) => {\n  const categories = ['all', ...new Set(rules.map(rule => rule.category))].sort();\n  const getCategoryCount = category => {\n    if (category === 'all') return rules.length;\n    return rules.filter(rule => rule.category === category).length;\n  };\n  const getCategoryColor = category => {\n    const colors = {\n      aws: '#ff9900',\n      python: '#3776ab',\n      terraform: '#623ce4',\n      javascript: '#f7df1e',\n      react: '#61dafb',\n      ruby: '#cc342d',\n      serverless: '#fd5750'\n    };\n    return colors[category] || '#00ff41';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"filter-label\",\n      children: \"Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-buttons\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onCategoryChange(category),\n        className: `category-button ${selectedCategory === category ? 'active' : ''}`,\n        style: {\n          '--category-color': category !== 'all' ? getCategoryColor(category) : '#00ff41'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"category-name\",\n          children: category === 'all' ? 'All' : category.charAt(0).toUpperCase() + category.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"category-count\",\n          children: getCategoryCount(category)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = CategoryFilter;\nexport default CategoryFilter;\nvar _c;\n$RefreshReg$(_c, \"CategoryFilter\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CategoryFilter","selectedCategory","onCategoryChange","rules","categories","Set","map","rule","category","sort","getCategoryCount","length","filter","getCategoryColor","colors","aws","python","terraform","javascript","react","ruby","serverless","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["/Users/jr7085/Code/amazonq-rules/frontend/src/components/CategoryFilter.js"],"sourcesContent":["import React from 'react';\nimport './CategoryFilter.css';\n\nconst CategoryFilter = ({ selectedCategory, onCategoryChange, rules }) => {\n  const categories = ['all', ...new Set(rules.map(rule => rule.category))].sort();\n  \n  const getCategoryCount = (category) => {\n    if (category === 'all') return rules.length;\n    return rules.filter(rule => rule.category === category).length;\n  };\n\n  const getCategoryColor = (category) => {\n    const colors = {\n      aws: '#ff9900',\n      python: '#3776ab',\n      terraform: '#623ce4',\n      javascript: '#f7df1e',\n      react: '#61dafb',\n      ruby: '#cc342d',\n      serverless: '#fd5750'\n    };\n    return colors[category] || '#00ff41';\n  };\n\n  return (\n    <div className=\"category-filter\">\n      <label className=\"filter-label\">Category:</label>\n      <div className=\"category-buttons\">\n        {categories.map(category => (\n          <button\n            key={category}\n            onClick={() => onCategoryChange(category)}\n            className={`category-button ${selectedCategory === category ? 'active' : ''}`}\n            style={{\n              '--category-color': category !== 'all' ? getCategoryColor(category) : '#00ff41'\n            }}\n          >\n            <span className=\"category-name\">\n              {category === 'all' ? 'All' : category.charAt(0).toUpperCase() + category.slice(1)}\n            </span>\n            <span className=\"category-count\">\n              {getCategoryCount(category)}\n            </span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryFilter;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC,gBAAgB;EAAEC;AAAM,CAAC,KAAK;EACxE,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,GAAG,IAAIC,GAAG,CAACF,KAAK,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EAE/E,MAAMC,gBAAgB,GAAIF,QAAQ,IAAK;IACrC,IAAIA,QAAQ,KAAK,KAAK,EAAE,OAAOL,KAAK,CAACQ,MAAM;IAC3C,OAAOR,KAAK,CAACS,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAKA,QAAQ,CAAC,CAACG,MAAM;EAChE,CAAC;EAED,MAAME,gBAAgB,GAAIL,QAAQ,IAAK;IACrC,MAAMM,MAAM,GAAG;MACbC,GAAG,EAAE,SAAS;MACdC,MAAM,EAAE,SAAS;MACjBC,SAAS,EAAE,SAAS;MACpBC,UAAU,EAAE,SAAS;MACrBC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE,SAAS;MACfC,UAAU,EAAE;IACd,CAAC;IACD,OAAOP,MAAM,CAACN,QAAQ,CAAC,IAAI,SAAS;EACtC,CAAC;EAED,oBACET,OAAA;IAAKuB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BxB,OAAA;MAAOuB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjD5B,OAAA;MAAKuB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BnB,UAAU,CAACE,GAAG,CAACE,QAAQ,iBACtBT,OAAA;QAEE6B,OAAO,EAAEA,CAAA,KAAM1B,gBAAgB,CAACM,QAAQ,CAAE;QAC1Cc,SAAS,EAAE,mBAAmBrB,gBAAgB,KAAKO,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC9EqB,KAAK,EAAE;UACL,kBAAkB,EAAErB,QAAQ,KAAK,KAAK,GAAGK,gBAAgB,CAACL,QAAQ,CAAC,GAAG;QACxE,CAAE;QAAAe,QAAA,gBAEFxB,OAAA;UAAMuB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC5Bf,QAAQ,KAAK,KAAK,GAAG,KAAK,GAAGA,QAAQ,CAACsB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGvB,QAAQ,CAACwB,KAAK,CAAC,CAAC;QAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9E,CAAC,eACP5B,OAAA;UAAMuB,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC7Bb,gBAAgB,CAACF,QAAQ;QAAC;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC;MAAA,GAZFnB,QAAQ;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaP,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACM,EAAA,GA7CIjC,cAAc;AA+CpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}